<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <configSections>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="Medusa.Architecture.ProcessManagement.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    </sectionGroup>

    <section name="XmlConfig" type="Medusa.Architecture.ProcessManagement.Xml.XmlConfigSection, Medusa.Architecture.ProcessManagement"/>

    <!--
		<section name="DatabaseConfig" type="Prominente.Framework.ServiceManagement.Database.DatabaseConfigSection, Prominente.Framework.ServiceManagement"/>
		-->
  </configSections>

  <XmlConfig ConfigurationFilePath ="BPConfig.xml"/>

  <!--
	<DatabaseConfig ConnectionName ="BPConfig"/>

	<connectionStrings>
		<add name="BPConfig" providerName="System.Data.SqlClient" connectionString="Data Source=PCPDES008;Initial Catalog=BPConfig;User ID=SA;Password="/>
	</connectionStrings>
	-->


  <applicationSettings>

    <Medusa.Architecture.ProcessManagement.Properties.Settings>
      <setting name="ProcessConfigurationManagerType" serializeAs="String">
        <value>Medusa.Architecture.ProcessManagement.Xml.XmlProcessConfigurationManager, Medusa.Architecture.ProcessManagement</value>
      </setting>
      <!--
			<setting name="ProcessConfigurationManagerType" serializeAs="String">
				<value>Prominente.Framework.ServiceManagement.Database.DatabaseProcessConfigurationManager, Prominente.Framework.ServiceManagement</value>
			</setting>
			-->
    </Medusa.Architecture.ProcessManagement.Properties.Settings>

  </applicationSettings>

  <system.web>
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <compilation debug="true">
      <assemblies>
        <add assembly="System.Transactions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Management, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
        <add assembly="System.Data.OracleClient, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
      </assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <authentication mode="Windows"/>
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
  </system.web>
</configuration>
